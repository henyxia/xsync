#!/usr/bin/perl

use strict;
use warnings;

use FileHandle;
use Digest::MD5;
use Cwd 'abs_path';

my $conf->{IGNORED_INCLUDED}->{authorized} = [ qw{ 0 1 } ];
$conf->{IGNORED_INCLUDED}->{default} = 0;
$conf->{TOKEN_REPO}->{authorized} = '/[a-z0-9]{32}/';
$conf->{TOKEN_REPO}->{mandatory} = 1;
$conf->{TOKEN_AUTH}->{authorized} = '/[a-z0-9]{32}/';
$conf->{TOKEN_AUTH}->{mandatory} = 1;

sub isSyncable
{
	my ($item) = @_;
	my @omitted = qw(\.xsync);

	foreach my $omittedItem(@omitted)
	{
		if($item =~ $omittedItem)
		{
			return 0;
		}
	}

	return 1;
}

sub getMD5
{
	my $file = shift;
	my $ctx = Digest::MD5->new;
	my $fh = FileHandle->new($file, "r");
	$ctx->addfile($fh);
	my $digest = $ctx->hexdigest;
	return $digest;
}

sub process_files
{
	# Getting the path we want to scan
    my $path = shift;

	# Opening directory
    opendir (DIR, $path)
        or die "Unable to open $path: $!";

	# Listing files expect . and ..
    my @files = grep { !/^\.{1,2}$/ } readdir (DIR);

    # Close the directory.
    closedir (DIR);

    # Gatting the real link
    @files = map { $path . '/' . $_ } @files;

	# Listing files
    for (@files)
	{
		# Scanning undergoing directory
        if (-d $_)
		{
            process_files ($_);
        }
		else
		{
			# Now checking if we want to scan this file
			if ((!$conf->{OMIT}->{value}) and isSyncable($_))
			{
				print "ANALYZING\t".$_."\t".getMD5($_)."\n"
			}
			else
			{
				print "OMMITED\t$_\n";
			}
        }
    }
}

sub read_conf
{
	my $folder = shift;

	print "Reading conf for folder $folder\n";

	my $fh;
	my $i = 0;
	if(!open($fh, '<', $folder.'/.xsync'))
	{
		print STDERR "Uanble to read your configuration file\n";
		print STDERR "Your datas will not be synced\n";
		die();
	}

	foreach my $iteParam(keys %$conf)
	{
		if(!$conf->{$iteParam}->{mandatory})
		{
			$conf->{$iteParam}->{value} = $conf->{$iteParam}->{default};
			print STDERR "Setting $iteParam to default value\n";
		}
	}

	# Setting default parameters

	while(my $line = <$fh>)
	{
		$i++;
		chomp $line;

		my ($param, $data) = $line =~ /(\w*)[\ \t]+(.*)/;
		if(!($param and $data))
		{
			print STDERR "Malformed line $i\n";
			next;
		}

		if(!defined($conf->{$param}->{authorized}))
		{
			print STDERR "Parameter $param not recognized\n";
			next;
		}

		if($data ~~ $conf->{$param}->{authorized})
		{
			print STDERR "The value $data is not allowed for $param\n";
			next;
		}

		$conf->{$param}->{value} = $data;
	}

	foreach my $iteParam(keys %$conf)
	{
		if($conf->{$iteParam}->{mandatory} and !$conf->{$iteParam}->{value})
		{
			die "Cannot perform sync without parameter: $iteParam\n";
		}
	}
}

my ($currentDir) = @ARGV;
$currentDir = abs_path($currentDir || '.');

print "Scanning directory $currentDir\n\n";

read_conf($currentDir);
process_files($currentDir);
